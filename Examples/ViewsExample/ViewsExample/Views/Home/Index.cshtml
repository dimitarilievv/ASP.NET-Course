@model IEnumerable<Person>
@{
	//string appTitle = "ASP.NET Core Demo App";
	//Person person = new Person()
	//		{
	//			Name = "John",
	//			DateOfBirth = Convert.ToDateTime("2000-07-01"),
	//			PersonGender = Gender.Male
	//		};
	//List<Person> people = new List<Person>()
	//{
	//		new Person(){Name = "John",DateOfBirth = Convert.ToDateTime("2000-07-01"),PersonGender = Gender.Male},
	//		new Person(){Name = "Anna",DateOfBirth = Convert.ToDateTime("1989-07-01"),PersonGender = Gender.Female},
	//		new Person(){Name = "Susa",DateOfBirth = Convert.ToDateTime("2005-07-01"),PersonGender = Gender.Other}
	//};
}

<!DOCTYPE html>
<html>
	<head>
	<title>@ViewBag.appTitle</title>
		<meta charset="utf-8" />
		<link href="~/StyleSheet.css" rel="stylesheet"/>
	</head>
	<body>
	<div class="page-content">
		<h1>Persons</h1>
		@*<h1>Welcome</h1>
		@Html.Raw(alertMessage)
		<h2>Hello @person.Name</h2>
		@if (person.DateOfBirth.HasValue)
		{
			int age = DateTime.Now.Year - person.DateOfBirth.Value.Year;
			//double age = Math.Round((DateTime.Now - person.DateOfBirth).Value.TotalDays / 365.25);
			<h3>@age years old</h3>
		}
		else
		{
			<h3>Date of birth is unknown</h3>
		}
		*@

	
		@{
			//if we want people with ViewData
			//List<Person>? peopleViewData = (List<Person>?)ViewData["peopleViewData"];
		}
		@*FOREACH LOOP*@
		@*@foreach (Person p in ViewBag.people)*@
		@foreach (Person p in Model)
		{
			<div class="box float-left w-50">
				<h3>@p.Name</h3>
				<table class="table w-100">
					<tbody>
						<tr>
							<td>Gender</td>
							<td>@p.PersonGender</td>
						</tr>
						<tr>
							<td>Date of Birth</td>
							<td>@p.DateOfBirth?.ToString("MM/dd/yyyy")</td>
						</tr>
					</tbody>
				</table>
				<div><a href="/person-details/@p.Name">Details</a></div>
				
			</div>
		}
		<div>
			<a href="/person-with-product">Person with Product</a>
		</div>
		<br />


		@*LOCAL FUNCTION
		@{
			//if we add @functions this local funtion becomes method
			double? GetAge(DateTime? dateOfBirth)
			{
				if (dateOfBirth is not null)
				{
					return Math.Round((DateTime.Now - dateOfBirth.Value).TotalDays / 365.25);
				}
				else
				{
					return null;
				}
			}
			//string alertMessage = $"<script>alert('{people.Count} people found')</script>";
		}
		*@

		@*	@*SWITCH CASE
		@switch (person.PersonGender)
		{
			case Gender.Male:
				<p>November 19 is International Men's Day</p>
				;
				break;
			case Gender.Female:
				<p>March 8 is International Men's Day</p>
				;
				break;
			case Gender.Other:
				<p>March 31 is International Transgender's Day</p>
				;
				break;
		}
		*@
		@*FOR LOOP*@

		@*@for (int i = 0; i < 2; i++)
		{
			//Person p = people[i];
			Person p = peopleViewData[i];
			@:Hello to
			<div>
				@p.Name
				<span>, </span>
				<span>@p.PersonGender</span>
				@if (p.DateOfBirth != null)
				{
					<span>@p.DateOfBirth.Value.ToString("MM/dd/yyyy")</span>
					<span>@GetAge(p.DateOfBirth) years old</span>
				}
			</div>
		}
		*@
	</div>
	
</body>
</html>